<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2020-10-07T06:10:52+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Graph Media Co.</title><subtitle>Graph Media Co. is a digital agency. Graphic design, Mobile Development and Web Development.
</subtitle><author><name>Msindisi Ndlela</name><email>msindisi.ndlela@gmail.com</email></author><entry><title type="html">Introduction to Flutter.</title><link href="http://localhost:4000/flutter/2020-08-28-introduction-to-flutter/" rel="alternate" type="text/html" title="Introduction to Flutter." /><published>2020-08-28T00:00:00+02:00</published><updated>2020-09-27T05:32:21+02:00</updated><id>http://localhost:4000/flutter/introduction-to-flutter</id><content type="html" xml:base="http://localhost:4000/flutter/2020-08-28-introduction-to-flutter/">&lt;p&gt;Mobile applications continue to grow in popularity each year…&lt;/p&gt;

&lt;p&gt;With this growth, newer and more powerful tools are constantly on the rise to facilitate the mobile development process. One has taken the industry by storm:  &lt;strong&gt;Flutter&lt;/strong&gt;, a toolkit for building cross-platform applications.&lt;/p&gt;

&lt;p&gt;Getting started with Flutter can get incredibly easy and successful. Given the increasing demand and everything that is uncharted about it, we have plenty of room to explore and enrich ourselves with this technology.&lt;/p&gt;

&lt;p&gt;After today’s reading, you will walk away with a good overview of Flutter and build a basic Flutter application.&lt;/p&gt;

&lt;ol id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-flutter&quot; id=&quot;markdown-toc-what-is-flutter&quot;&gt;What is Flutter?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-dart&quot; id=&quot;markdown-toc-what-is-dart&quot;&gt;What is Dart?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#why-flutter-uses-dart&quot; id=&quot;markdown-toc-why-flutter-uses-dart&quot;&gt;Why Flutter uses Dart?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#why-flutter&quot; id=&quot;markdown-toc-why-flutter&quot;&gt;Why Flutter?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#flutter-widgets&quot; id=&quot;markdown-toc-flutter-widgets&quot;&gt;Flutter Widgets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#widget-tree&quot; id=&quot;markdown-toc-widget-tree&quot;&gt;Widget Tree&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#setting-up-the-development-environment&quot; id=&quot;markdown-toc-setting-up-the-development-environment&quot;&gt;Setting up the development environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#generating-a-starter-mobile-application&quot; id=&quot;markdown-toc-generating-a-starter-mobile-application&quot;&gt;Generating a starter mobile application&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-is-flutter&quot;&gt;What is Flutter?&lt;/h2&gt;
&lt;p&gt;Flutter is Google’s free and open source framework for creating cross platform applications for mobile, web and desktop, from a single codebase. Though Flutter’s support for  mobile applications (iOS and ARM Android) is 100% and thousands of apps have already shipped, web and desktop support has some caveats and work is under progress to make it fully functional. But once Google officially announces it, it would be really interesting to write one codebase with  Flutter SDK and see it run on different form factors. This would surely speed up development and reduce the cost and complexity of application production across platforms.&lt;/p&gt;

&lt;p&gt;Flutter majorly incorporates two things:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SDK&lt;/strong&gt; – a 2D Rendering Engine Skia and command-line tools for creating, building, testing, and compiling Flutter apps for different platforms&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Framework&lt;/strong&gt; – rich set of widgets and packages for creating UIs for both Android and iOS, plugin APIs  to connect to the system and 3rd-party SDKs&lt;/p&gt;

&lt;h2 id=&quot;what-is-dart&quot;&gt;What is Dart?&lt;/h2&gt;
&lt;p&gt;Dart is an object-oriented programming language developed by Google. It “is a client-optimized language for fast apps on any platform.”&lt;/p&gt;

&lt;h2 id=&quot;why-flutter-uses-dart&quot;&gt;Why Flutter uses Dart?&lt;/h2&gt;
&lt;p&gt;Flutter applications are written in Dart. The primary reasons for its usage can be listed as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Easy to Learn&lt;/strong&gt;: Dart is inspired by some popular static and dynamic languages like Java and JavaScript. As most developers are familiar with these languages, learning Dart becomes less stressful and more natural!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Static type and Sound type system&lt;/strong&gt;: Dart has a static type and sound type system which helps to catch bugs at compile time and manage code as it grows.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Supports both JIT and AOT Compilation&lt;/strong&gt;:Dart Native includes both AOT and JIT compilers and Flutter uses both. It JIT compiles the code during development, allowing for stateful hot reload, with which modifications to source files are injected into a running application. This is a highly appreciated feature as developers can see the changes immediately, without refreshing the application. The release versions of Flutter apps use AOT compiler to compile to native machine code. This makes the compiled apps run instantly and smoothly on, omitting the need of any bridge.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://firebasestorage.googleapis.com/v0/b/graphmedia-co.appspot.com/o/blog%2Fpost_1%2Fflutter-1.png?alt=media&amp;amp;token=7f736f67-cd96-419b-a2d9-6c9ef5d8772b&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; loading=&quot;lazy&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Multi-Platform Support&lt;/strong&gt;: Flutter uses Dart Web for compiling Dart code to JavaScript so that it can run in the browser. This compilation versatility of Dart helps developers write one codebase for multiple platforms and multiple devices.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Allows Smooth Animations&lt;/strong&gt;: Flutter runs at 60fps, which is good to provide smooth animations and transitions. This is made possible by Dart features to avoid many of the common things that can cause jank.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Active Dart Community&lt;/strong&gt;: There is a strong Dart community, which is actively involved in improving Dart for use in Flutter.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-flutter&quot;&gt;Why Flutter?&lt;/h2&gt;
&lt;p&gt;Flutter gives us plenty of reasons to choose it but what stands out the most is, it being highly productive, as apps can be developed for multiple platforms from a single codebase. Apart from this,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Flutter overthrows the clumsiness and limitations of cross-platform approaches. As a Flutter production app is compiled ahead-of-time to native machine code, it runs instantly and smoothly on different platforms. With no interpreters involved, it gives excellent performance.&lt;/li&gt;
  &lt;li&gt;Flutter neither uses the WebView nor the OEM widgets shipped with the device. Rather, it uses its own 2d graphics engine Skia, to draw every pixel on the screen. This helps to create UIs as required by native platforms, making way for good user experience.&lt;/li&gt;
  &lt;li&gt;Flutter UI is made of widgets, written declaratively in Dart. This means that developers can compose existing widgets to make more sophisticated widgets.&lt;/li&gt;
  &lt;li&gt;Flutter doesn’t split layout between the program and an additional templating or layout languages like JSX or XML. Everything in Flutter is a widget. Even layout is done by widgets. This gives a unified layout system, allowing developers to customize Flutter UIs easily for both platforms – iOS and Android – from same codebase.
It’s hot reload feature allows developers to see changes they make to the state of an app very almost immediately. Fixing crashes has never been easier as debugging can be continued from wherever it was left off earlier. In some cases, we may have to restart the app and for that its hot restart feature is also lightning fast.&lt;/li&gt;
  &lt;li&gt;Flutter works at 60fps, allowing smooth animations and transitions. 
There is a vast collection of open source packages, which can be incorporated into a Flutter application for faster development.&lt;/li&gt;
  &lt;li&gt;Flutter can work with existing iOS and Android native apps.&lt;/li&gt;
  &lt;li&gt;Flutter gives plugins for a number of Integrated Development Environments -Android Studio, Intellij and - Visual Studio Code – for easy and speedy development.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Google Ads, Reflectly, Realtor.com, Tencent, Alibaba, Capital One, Groupon, ebay are some of  the mobile applications built in Flutter.&lt;/p&gt;

&lt;h2 id=&quot;flutter-widgets&quot;&gt;Flutter Widgets&lt;/h2&gt;
&lt;p&gt;In Flutter, a widget is a building block used to make the application’s user interface. Flutter ships with a huge collection of visual, layout, interactive and platform widgets, which can be consciously used to create beautiful UIs. It offers two differently styled widget libraries (in addition to the basic widget library) – &lt;strong&gt;Material&lt;/strong&gt; widgets and &lt;strong&gt;Cupertino&lt;/strong&gt; (iOS-style) widgets. You can mix widgets from both libraries, customize existing widgets, or can build your own custom widgets.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Material&lt;/strong&gt; widgets help developers create UIs based on Material Design. We can find innumerable number of such beautiful and functional widgets in the Material widget catalog, and use them to create consistent user experience across applications and platforms.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cupertino&lt;/strong&gt; widgets implement the iOS design language. As Material widgets have the Material look and feel on all devices, even on iOS, Flutter offers the Cupertino library. Using this library of widgets, we can develop a classic iOS-styled application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;widget-tree&quot;&gt;Widget Tree&lt;/h2&gt;
&lt;p&gt;Widgets are the foundation of Flutter apps and nearly everything in Flutter is a widget. Images, icons, text, etc. are all widgets and you can see them. Even the invisible things that are used to structure, position and align the visible widgets, are also widgets. You don’t see them but they are widgets, e.g. rows, columns, grids, etc. These simple widgets are used together (composed) to create a widget tree, and this widget tree, finally represents a user interface. This can be  illustrated by the given diagram:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://firebasestorage.googleapis.com/v0/b/graphmedia-co.appspot.com/o/blog%2Fpost_1%2Fflutter-2.png?alt=media&amp;amp;token=99594057-add8-4e06-bfd3-4e4cd75cf9f6&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; loading=&quot;lazy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the above tree, right from top to bottom, everything is a widget taken from Flutter’s Material widget library. The corresponding code for this tree goes as below.&lt;/p&gt;

&lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaterialApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;home:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'My First App'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
          &lt;span class=&quot;nl&quot;&gt;backgroundColor:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;nl&quot;&gt;image:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;        
&lt;span class=&quot;s&quot;&gt;'https://tse3.mm.bing.net/th?id=OIP.Zq_KyH6A9Q-Mdq8U-5_H4AHaLH&amp;amp;pid=Api&amp;amp;P=0&amp;amp;w=300&amp;amp;h=300'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  
      &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;runApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p class=&quot;figcaption&quot;&gt;main.dart&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;main() function – is the entry point of a Flutter app&lt;/li&gt;
  &lt;li&gt;runApp() function – calls the MaterialApp() constructor to render widget tree on the screen&lt;/li&gt;
  &lt;li&gt;MaterialApp() – forms the root of the widget tree. Inside it other class constructors are called to create child and sub-child widgets. MaterialApp widget conforms to Google’s Material Design.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-up-the-development-environment&quot;&gt;Setting up the development environment&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;To install and run Flutter, you need
    &lt;ul&gt;
      &lt;li&gt;Operating Systems: Windows 7 SP1 or later (64-bit) / macOS (64-bit) / Linux (64-bit)&lt;/li&gt;
      &lt;li&gt;Flutter SDK: Flutter 1.12.13 (latest as of now)&lt;/li&gt;
      &lt;li&gt;Android Studio&lt;/li&gt;
      &lt;li&gt;For Android Apps:
        &lt;ul&gt;
          &lt;li&gt;Mac or PC (8GB recommended, 4GB available hard disk space,)&lt;/li&gt;
          &lt;li&gt;IDE (Intellij/Visual Studio Code with Dart plugin installed)&lt;/li&gt;
          &lt;li&gt;Android Emulator or Physical Device for testing&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;For iOS Apps:
        &lt;ul&gt;
          &lt;li&gt;Mac (8GB recommended, 4GB available hard disk space)&lt;/li&gt;
          &lt;li&gt;IDE (Xcode with Dart plugin installed)&lt;/li&gt;
          &lt;li&gt;iOS Simulator or Physical Device for testing&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;You can do the installation and set up your development environment by following this &lt;a href=&quot;https://flutter.dev/docs/get-started/install&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt; on Google’s official website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;generating-a-starter-mobile-application&quot;&gt;Generating a starter mobile application&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;You can create and run a starter application by following these &lt;a href=&quot;https://flutter.dev/docs/get-started/test-drive?tab=androidstudio#create-app&quot; target=&quot;_blank&quot;&gt;steps&lt;/a&gt;. It will generate an application scaffold for a simple Flutter application.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Msindisi Ndlela</name><email>msindisi.ndlela@gmail.com</email></author><category term="flutter" /><summary type="html">Mobile applications continue to grow in popularity each year…</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://firebasestorage.googleapis.com/v0/b/graphmedia-co.appspot.com/o/blog%2Fpost_1%2Fgetting-started-with-flutter.png?alt=media&amp;token=148caa64-9074-41d0-b36d-29e16a3ebe1e" /><media:content medium="image" url="https://firebasestorage.googleapis.com/v0/b/graphmedia-co.appspot.com/o/blog%2Fpost_1%2Fgetting-started-with-flutter.png?alt=media&amp;token=148caa64-9074-41d0-b36d-29e16a3ebe1e" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>